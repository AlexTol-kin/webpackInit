{"version":3,"file":"bundle.js","mappings":"mBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAGhB,CAFE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,G,MCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,IAC5D,CAID,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjB,EAAoBkB,EAAIX,C,iNCLxB,GACE,CACEY,GAAI,EACJC,QAAS,SACTC,MAAO,EACPC,MAAO,EACPC,W,gCAEF,CACEJ,GAAI,EACJC,QAAS,SACTC,MAAO,EACPC,MAAO,EACPC,W,gCAEF,CACEJ,GAAI,EACJC,QAAS,OACTC,MAAO,EACPC,MAAO,EACPC,W,iCAIJ,IAAMC,EAAWd,SAASe,eAAe,OAErCC,EAA8B,KAC9BC,EAAgB,GAChBC,GAAqB,EAEzBJ,EAASK,iBAAiB,SAAS,SAACC,GAClC,IAAMC,EAA4BD,EAAMC,OAClCC,EAA4BD,EAAOE,cAAc,SACvD,IAAKF,EAA6BJ,MAGlC,OAAIA,IAAUI,EAAOG,UAAUP,OAAmB,KAAVA,GACtCC,GAAY,EACZF,EAAUS,QACVT,EAAUU,YAAc,EACxBT,EAAQI,EAAOG,UAAUP,MACzBD,EAAYM,OACZA,EAAQK,QAGNT,GACFF,EAAYM,EACZJ,GAAY,OACZI,EAAQK,aAGI,KAAVV,GAAgBA,IAAUI,EAAOG,UAAUP,OAC7CD,EAAYM,EACZL,EAAQI,EAAOG,UAAUP,MACzBK,EAAQK,QACCV,IAAUI,EAAOG,UAAUP,QACpCD,EAAYM,EACZJ,GAAY,EACZI,EAAQG,SAEZ,ICnEA,IAAMG,EAAoB5B,SAASuB,cAAc,QAsCjDM,EAAKC,SA5BL,SAAuBC,GACrB,IAAMC,EAA4BhC,SAASiC,cAAc,OACzDD,EAAUR,UAAUU,IAAI,aAExB,IAAMC,EAA4B,IAAIC,MAAML,EAAKpB,OAE3C0B,EAA4BrC,SAASiC,cAAc,UACzDI,EAAOC,UAAY,mBAAYP,EAAKnB,MAAK,wCACzCyB,EAAOb,UAAUU,IAAI,aAAMH,EAAKrB,UAEhC,IAAMI,EAAWd,SAASuB,cAAc,QAExCS,EAAUb,iBAAiB,SAAS,WAClCL,EAASyB,MAAMC,gBAAkB,cAAOT,EAAKlB,WAAU,IACzD,IAEA,IAAM4B,EACJzC,SAASe,eAAe,SAE1B0B,EAAMtB,iBAAiB,SAAS,WAC9BgB,EAAQO,OAASC,OAAOF,EAAMxB,OAAS,GACzC,IAEAoB,EAAOO,YAAYT,GACnBH,EAAUY,YAAYP,GACtBT,EAAKiB,OAAOb,EACd,G","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///webpack/runtime/publicPath","webpack:///./data.ts","webpack:///./index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import soundWinter from \"./assets/sounds/winter.mp3\";\nimport soundSummer from \"./assets/sounds/summer.mp3\";\nimport soundRain from \"./assets/sounds/rain.mp3\";\nimport iconWinter from \"./assets/icons/cloud-snow.svg\";\nimport iconSummer from \"./assets/icons/sun.svg\";\nimport iconRain from \"./assets/icons/cloud-rain.svg\";\nimport bgWinter from \"./assets/winter-bg.jpg\";\nimport bgSummer from \"./assets/summer-bg.jpg\";\nimport bgRain from \"./assets/rainy-bg.jpg\";\n\nexport default [\n  {\n    id: 1,\n    weather: \"winter\",\n    sound: soundWinter,\n    icons: iconWinter,\n    background: bgWinter,\n  },\n  {\n    id: 2,\n    weather: \"summer\",\n    sound: soundSummer,\n    icons: iconSummer,\n    background: bgSummer,\n  },\n  {\n    id: 3,\n    weather: \"rain\",\n    sound: soundRain,\n    icons: iconRain,\n    background: bgRain,\n  },\n];\n\nconst divCheck = document.getElementById(\"app\");\n\nlet prevAudio: HTMLAudioElement = null;\nlet value: string = \"\";\nlet flagSound: boolean = false;\n\ndivCheck.addEventListener(\"click\", (event: Event) => {\n  const target: HTMLButtonElement = event.target as HTMLButtonElement;\n  const isAudio: HTMLAudioElement = target.querySelector(\"audio\");\n  if ((target as HTMLButtonElement).value) {\n    return;\n  }\n  if (value !== target.classList.value && value !== \"\") {\n    flagSound = false;\n    prevAudio.pause();\n    prevAudio.currentTime = 0.0;\n    value = target.classList.value;\n    prevAudio = isAudio;\n    isAudio.play();\n    return;\n  }\n  if (flagSound) {\n    prevAudio = isAudio;\n    flagSound = false;\n    isAudio.play();\n    return;\n  }\n  if (value === \"\" || value !== target.classList.value) {\n    prevAudio = isAudio;\n    value = target.classList.value;\n    isAudio.play();\n  } else if (value === target.classList.value) {\n    prevAudio = isAudio;\n    flagSound = true;\n    isAudio.pause();\n  }\n});\n","import data from \"./data\";\nimport \"./index.scss\";\n\nconst root: HTMLElement = document.querySelector(\"#app\");\n\ninterface IWeather {\n  id: number;\n  weather: string;\n  sound: string;\n  icons: string;\n  background: string;\n}\n\nfunction renderWeather(item: IWeather) {\n  const divWindow: HTMLDivElement = document.createElement(\"div\");\n  divWindow.classList.add(\"diwWindow\");\n\n  const myAudio: HTMLAudioElement = new Audio(item.sound);\n\n  const button: HTMLButtonElement = document.createElement(\"button\");\n  button.innerHTML = `<img src=${item.icons} width=\"40px\" pointer-events: none/>`;\n  button.classList.add(`btn${item.weather}`);\n\n  const divCheck = document.querySelector(\"body\");\n\n  divWindow.addEventListener(\"click\", () => {\n    divCheck.style.backgroundImage = `url(${item.background})`;\n  });\n\n  const range: HTMLInputElement = <HTMLInputElement>(\n    document.getElementById(\"range\")\n  );\n  range.addEventListener(\"input\", () => {\n    myAudio.volume = Number(range.value) / 100;\n  });\n\n  button.appendChild(myAudio);\n  divWindow.appendChild(button);\n  root.append(divWindow);\n}\n\ndata.forEach(renderWeather);\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","id","weather","sound","icons","background","divCheck","getElementById","prevAudio","value","flagSound","addEventListener","event","target","isAudio","querySelector","classList","pause","currentTime","play","root","data","forEach","item","divWindow","createElement","add","myAudio","Audio","button","innerHTML","style","backgroundImage","range","volume","Number","appendChild","append"],"sourceRoot":""}